Version 1.4.1 (22 May 2018)
-------------

* Fixed issue arising with sort order of alignments for sampled reads that can
  occur when using numeric dataset identifiers. Sampled reads from multiple
  datasets are collated in a different order to that expected by a check made
  when reading alignments during the report generation step. The workflow
  manager uses a numeric-aware comparator that recognizes the numeric components
  of filenames when sorting. The comparator used when reading alignments has
  been changed to use the same numeric-aware comparator.
  (https://github.com/crukci-bioinformatics/MGA/issues/3) 


Version 1.4 (27 February 2018)
-----------

* Added details of uniquely aligning reads to the results table and for
  preferentially aligning reads which align best, i.e. with fewest mismatches to
  the given reference genome, possibly tied with other matches to other genomes.

* Changed the logic for assigning reads to reference genomes; reads are now
  assigned to the reference genome to which they align with the smallest number
  of mismatches. In the event of a tie where the read aligns to more than one
  genome with the same number of mismatches, the reference genome with the
  largest number of preferentially aligned reads (best hits) is chosen.

* Colour highlighting now based on assigned reads and mismatch rates for
  assigned reads.

* Added --trim-start option to prepare-pipeline to specify the position within
  sequences from which to start trimming for subsequent alignment; any bases
  before this position will be trimmed. This can be used to remove molecular
  barcodes within the first 10 - 15 bases of reads.

* Run ID property in sample sheet is no longer required, the run identifier can
  alternatively be specified using the --run-id option when running
  prepare-pipeline.

* Added support for large reference genomes requiring use of large bowtie
  indexes.

* Fixed problem with report generation not able to run on hosts without an X11
  environment.

* Improvements to the report including change of criteria for including a
  species as separate entry in the table of potential contaminants (only the
  species most likely to be contaminants now included)

* Added prototype MGA wrapper for Illumina BaseSpace.

* Fixed problem with separate report per dataset containing tables for all
  datasets.


Version 1.3 (10 January 2014)
-----------

* Major reworking of pipeline to combine FASTQ records from multiple datasets
  and splitting the sequence data into chunks with a specified number of
  records, corresponding changes to report generation code.

* FASTQ sampling rewritten to use modified version of reservoir sampling method.

* Added option for setting the maximum number of FASTQ records to sample from.

* Added option to create separate reports for each dataset in addition to the
  report for all.

* Added option to specify the minimum number of sequences to display on the
  x-axis of the stacked bar plot in the report.

* Improved scaling for larger image sizes for the stacked bar plot and added
  anti-aliasing for text.

* Removed utility for creating a configuration file from the Solexa LIMS (no
  longer in use).


Version 1.2 (4 February 2013)
-----------

* Fix for failing validation of XML schema definitions.

* New utility for creating the run metadata file by retrieving information
  from the Solexa LIMS via the SOAP API.


Version 1.1 (26 September 2012)
-----------

* Summary report contains new graphical representation of the alignment results
  and different highlighting for spike-in/control samples.

* Fixed bug in which MGA fails if any of the FASTQ sequence data files have no
  sequences.

* Bowtie indexes no longer need to have '.bowtie' preceding the usual suffixes
  (1.ebwt, 2.ebwt, 3.ebwt, 4,ebwt, rev.1.ebwt, rev.2.ebwt)

* Base qualities in the FASTQ sequence data files are now expected to be on the
  Sanger scale, i.e. Phred+33.


Version 1.0 (13 July 2011)
-----------

* First release using workflow system also developed at the CRI and deployed as
  a Java application, replacing the initial prototype developed in ruby.

